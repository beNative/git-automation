name: Build and Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.display_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            display_name: macOS x64
            build_command: npx electron-builder --publish never --mac
            artifact_name: macOS-artifacts
          - os: windows-latest
            display_name: Windows x64
            build_command: npx electron-builder --publish never --win --x64
            artifact_name: windows-x64-artifacts
          - os: windows-latest
            display_name: Windows win32
            build_command: npx electron-builder --publish never --win --ia32
            artifact_name: windows-win32-artifacts
          - os: ubuntu-latest
            display_name: Linux x64
            build_command: npx electron-builder --publish never --linux --x64
            artifact_name: linux-x64-artifacts
          - os: ubuntu-latest
            display_name: Linux armv7l
            build_command: npx electron-builder --publish never --linux --armv7l
            artifact_name: linux-armv7l-artifacts
          - os: ubuntu-latest
            display_name: Linux arm64
            build_command: npx electron-builder --publish never --linux --arm64
            artifact_name: linux-arm64-artifacts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build application bundles
        run: npm run build

      - name: Package Electron application
        run: ${{ matrix.build_command }}

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: release/**
          if-no-files-found: error
